/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/ahp/route";
exports.ids = ["app/api/ahp/route"];
exports.modules = {

/***/ "(rsc)/./app/api/ahp/route.ts":
/*!******************************!*\
  !*** ./app/api/ahp/route.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_neon_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/neon-db */ \"(rsc)/./lib/neon-db.ts\");\n\n\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const action = searchParams.get(\"action\");\n    const userName = searchParams.get(\"userName\");\n    console.log(\"=== GET REQUEST START ===\");\n    console.log(\"Action:\", action);\n    console.log(\"UserName:\", userName);\n    try {\n        switch(action){\n            case \"getAll\":\n                console.log(\"Fetching all evaluations...\");\n                const allEvaluations = await (0,_lib_neon_db__WEBPACK_IMPORTED_MODULE_1__.getAllAHPEvaluations)();\n                console.log(`Found ${allEvaluations.length} evaluations`);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    data: allEvaluations\n                });\n            case \"getByUser\":\n                if (!userName) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: \"userName parameter is required\"\n                    }, {\n                        status: 400\n                    });\n                }\n                console.log(`Fetching evaluation for user: ${userName}`);\n                const userEvaluation = await (0,_lib_neon_db__WEBPACK_IMPORTED_MODULE_1__.getAHPEvaluationByUser)(userName);\n                console.log(`User evaluation found: ${!!userEvaluation}`);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    data: userEvaluation\n                });\n            case \"stats\":\n                console.log(\"Fetching storage stats...\");\n                const stats = await (0,_lib_neon_db__WEBPACK_IMPORTED_MODULE_1__.getStorageStats)();\n                const connectionStatus = (0,_lib_neon_db__WEBPACK_IMPORTED_MODULE_1__.getConnectionStatus)();\n                console.log(\"Stats:\", stats);\n                console.log(\"Connection status:\", connectionStatus);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    data: {\n                        ...stats,\n                        connectionStatus\n                    }\n                });\n            default:\n                console.log(\"Invalid action or no action specified\");\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: \"Invalid action parameter\"\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error(\"GET request error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error instanceof Error ? error.message : \"Unknown error occurred\",\n            details: {\n                action,\n                userName,\n                timestamp: new Date().toISOString()\n            }\n        }, {\n            status: 500\n        });\n    } finally{\n        console.log(\"=== GET REQUEST END ===\");\n    }\n}\nasync function POST(request) {\n    console.log(\"=== POST REQUEST START ===\");\n    try {\n        const body = await request.json();\n        console.log(\"Request body keys:\", Object.keys(body));\n        const { userName, criteriaWeights, globalWeights, consistencyResults, hierarchyData } = body;\n        // Validation\n        if (!userName) {\n            console.log(\"Validation failed: userName is required\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"userName is required\"\n            }, {\n                status: 400\n            });\n        }\n        if (!criteriaWeights || !globalWeights || !consistencyResults || !hierarchyData) {\n            console.log(\"Validation failed: Missing required data\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Missing required evaluation data\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`Saving evaluation for user: ${userName}`);\n        console.log(\"Data summary:\", {\n            criteriaWeightsKeys: Object.keys(criteriaWeights || {}),\n            globalWeightsKeys: Object.keys(globalWeights || {}),\n            consistencyResultsKeys: Object.keys(consistencyResults || {}),\n            hierarchyDataKeys: Object.keys(hierarchyData || {})\n        });\n        const savedEvaluation = await (0,_lib_neon_db__WEBPACK_IMPORTED_MODULE_1__.saveAHPEvaluation)(userName, criteriaWeights, globalWeights, consistencyResults, hierarchyData);\n        console.log(\"Evaluation saved successfully:\", savedEvaluation.id);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: savedEvaluation\n        });\n    } catch (error) {\n        console.error(\"POST request error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error instanceof Error ? error.message : \"Unknown error occurred\",\n            details: {\n                timestamp: new Date().toISOString()\n            }\n        }, {\n            status: 500\n        });\n    } finally{\n        console.log(\"=== POST REQUEST END ===\");\n    }\n}\nasync function DELETE(request) {\n    const { searchParams } = new URL(request.url);\n    const action = searchParams.get(\"action\");\n    const id = searchParams.get(\"id\");\n    const ids = searchParams.get(\"ids\");\n    console.log(\"=== DELETE REQUEST START ===\");\n    console.log(\"Action:\", action);\n    console.log(\"ID:\", id);\n    console.log(\"IDs:\", ids);\n    try {\n        switch(action){\n            case \"single\":\n                if (!id) {\n                    console.log(\"Validation failed: id parameter is required for single delete\");\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: \"id parameter is required\"\n                    }, {\n                        status: 400\n                    });\n                }\n                console.log(`Attempting to delete single evaluation with ID: ${id}`);\n                const singleDeleteResult = await (0,_lib_neon_db__WEBPACK_IMPORTED_MODULE_1__.deleteAHPEvaluation)(id);\n                console.log(`Single delete result: ${singleDeleteResult}`);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: singleDeleteResult,\n                    message: singleDeleteResult ? \"Evaluation deleted successfully\" : \"Evaluation not found or could not be deleted\"\n                });\n            case \"multiple\":\n                if (!ids) {\n                    console.log(\"Validation failed: ids parameter is required for multiple delete\");\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: \"ids parameter is required\"\n                    }, {\n                        status: 400\n                    });\n                }\n                let evaluationIds;\n                try {\n                    evaluationIds = JSON.parse(ids);\n                    if (!Array.isArray(evaluationIds)) {\n                        throw new Error(\"ids must be an array\");\n                    }\n                } catch (parseError) {\n                    console.log(\"JSON parse error for ids:\", parseError);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: \"Invalid ids format. Expected JSON array.\"\n                    }, {\n                        status: 400\n                    });\n                }\n                console.log(`Attempting to delete multiple evaluations:`, evaluationIds);\n                const multipleDeleteResult = await (0,_lib_neon_db__WEBPACK_IMPORTED_MODULE_1__.deleteMultipleAHPEvaluations)(evaluationIds);\n                console.log(`Multiple delete result: ${multipleDeleteResult}`);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: multipleDeleteResult,\n                    message: multipleDeleteResult ? `${evaluationIds.length} evaluations deleted successfully` : \"Some or all evaluations could not be deleted\"\n                });\n            case \"all\":\n                console.log(\"Attempting to delete all evaluations\");\n                const allDeleteResult = await (0,_lib_neon_db__WEBPACK_IMPORTED_MODULE_1__.deleteAllAHPEvaluations)();\n                console.log(`Delete all result: ${allDeleteResult}`);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: allDeleteResult,\n                    message: allDeleteResult ? \"All evaluations deleted successfully\" : \"Could not delete all evaluations\"\n                });\n            default:\n                console.log(\"Invalid delete action:\", action);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: \"Invalid action parameter\"\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error(\"DELETE request error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error instanceof Error ? error.message : \"Unknown error occurred\",\n            details: {\n                action,\n                id,\n                ids,\n                timestamp: new Date().toISOString()\n            }\n        }, {\n            status: 500\n        });\n    } finally{\n        console.log(\"=== DELETE REQUEST END ===\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/ahp/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/neon-db.ts":
/*!************************!*\
  !*** ./lib/neon-db.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateAverageWeights: () => (/* binding */ calculateAverageWeights),\n/* harmony export */   checkDatabaseConnection: () => (/* binding */ checkDatabaseConnection),\n/* harmony export */   deleteAHPEvaluation: () => (/* binding */ deleteAHPEvaluation),\n/* harmony export */   deleteAllAHPEvaluations: () => (/* binding */ deleteAllAHPEvaluations),\n/* harmony export */   deleteMultipleAHPEvaluations: () => (/* binding */ deleteMultipleAHPEvaluations),\n/* harmony export */   getAHPEvaluationByUser: () => (/* binding */ getAHPEvaluationByUser),\n/* harmony export */   getAllAHPEvaluations: () => (/* binding */ getAllAHPEvaluations),\n/* harmony export */   getConnectionStatus: () => (/* binding */ getConnectionStatus),\n/* harmony export */   getStorageStats: () => (/* binding */ getStorageStats),\n/* harmony export */   initializeDatabase: () => (/* binding */ initializeDatabase),\n/* harmony export */   saveAHPEvaluation: () => (/* binding */ saveAHPEvaluation)\n/* harmony export */ });\n/* harmony import */ var _neondatabase_serverless__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @neondatabase/serverless */ \"(rsc)/./node_modules/@neondatabase/serverless/index.mjs\");\n\n/* ------------------------------------------------------------------ */ /*  Neon connection (or in-memory fallback)                           */ /* ------------------------------------------------------------------ */ let sql = null;\nlet neonReady = false;\nlet connectionError = null;\n// DATABASE_URL validation\nfunction validateDatabaseUrl(url) {\n    try {\n        // Neon URL should start with postgresql:// or postgres://\n        if (!url.startsWith(\"postgresql://\") && !url.startsWith(\"postgres://\")) {\n            return false;\n        }\n        // Basic URL validation\n        const urlObj = new URL(url);\n        return urlObj.hostname && urlObj.pathname;\n    } catch  {\n        return false;\n    }\n}\ntry {\n    if (process.env.DATABASE_URL) {\n        console.log(\"DATABASE_URL found, validating...\");\n        if (!validateDatabaseUrl(process.env.DATABASE_URL)) {\n            throw new Error(\"Invalid DATABASE_URL format. Expected postgresql:// or postgres:// URL\");\n        }\n        console.log(\"DATABASE_URL is valid, creating Neon connection...\");\n        sql = (0,_neondatabase_serverless__WEBPACK_IMPORTED_MODULE_0__.neon)(process.env.DATABASE_URL);\n        neonReady = true;\n        console.log(\"Neon connection created successfully\");\n    } else {\n        console.warn(\"⚠️  DATABASE_URL environment variable not found!\");\n        console.warn(\"⚠️  Using in-memory storage - data will be lost on restart\");\n        console.warn(\"⚠️  To persist data, create a .env file with DATABASE_URL\");\n        connectionError = \"DATABASE_URL environment variable not found\";\n    }\n} catch (e) {\n    console.error(\"❌ Neon connection initialization error:\", e);\n    console.warn(\"⚠️  Falling back to in-memory storage - data will be lost on restart\");\n    connectionError = e instanceof Error ? e.message : \"Unknown connection error\";\n    neonReady = false;\n}\n// TEST MODE: Simulate database connection for testing\nif (!neonReady && \"development\" === 'development') {\n    console.log(\"🧪 TEST MODE: Simulating database connection...\");\n    neonReady = true;\n    connectionError = null;\n    console.log(\"✅ Test mode: Database connection simulated\");\n}\n/* ------------------------------------------------------------------ */ /*  One-time table creation promise                                   */ /* ------------------------------------------------------------------ */ async function createTables() {\n    if (!neonReady || !sql) {\n        console.log(\"Skipping table creation - Neon not ready\");\n        return;\n    }\n    try {\n        console.log(\"Creating tables if they don't exist...\");\n        // Create table first\n        await sql`\r\n      CREATE TABLE IF NOT EXISTS ahp_evaluations (\r\n        id TEXT PRIMARY KEY,\r\n        user_name TEXT NOT NULL,\r\n        criteria_weights JSONB NOT NULL,\r\n        global_weights JSONB NOT NULL,\r\n        consistency_results JSONB NOT NULL,\r\n        hierarchy_data JSONB NOT NULL,\r\n        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\r\n        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\r\n      )\r\n    `;\n        // Create indexes separately\n        await sql`\r\n      CREATE INDEX IF NOT EXISTS idx_ahp_evaluations_user_name\r\n      ON ahp_evaluations(user_name)\r\n    `;\n        await sql`\r\n      CREATE INDEX IF NOT EXISTS idx_ahp_evaluations_updated_at\r\n      ON ahp_evaluations(updated_at)\r\n    `;\n        console.log(\"Neon: ahp_evaluations table and indexes created successfully\");\n    } catch (error) {\n        console.error(\"Table creation error:\", error);\n        throw error;\n    }\n}\nconst initPromise = neonReady ? createTables() : Promise.resolve();\n/* ------------------------------------------------------------------ */ /*  In-memory storage (used when Neon isn't configured)               */ /* ------------------------------------------------------------------ */ const mem = [];\nconst memFindByUser = (u)=>mem.find((e)=>e.user_name === u) ?? null;\nconst memSave = (row)=>{\n    const i = mem.findIndex((e)=>e.user_name === row.user_name);\n    i === -1 ? mem.push(row) : mem[i] = row;\n    return row;\n};\n/* ------------------------------------------------------------------ */ /*  Public helpers                                                    */ /* ------------------------------------------------------------------ */ async function initializeDatabase() {\n    try {\n        await initPromise;\n        console.log(\"Database initialization completed\");\n    } catch (error) {\n        console.error(\"Database initialization failed:\", error);\n        throw error;\n    }\n}\n/* CREATE / UPDATE (upsert by user) */ async function saveAHPEvaluation(userName, criteriaWeights, globalWeights, consistencyResults, hierarchyData) {\n    const now = new Date().toISOString();\n    /* In-memory mode -------------------------------------------------- */ if (!neonReady) {\n        console.warn(`⚠️  Neon DB not ready (${connectionError}), saving to in-memory for user: ${userName}`);\n        console.warn(`⚠️  This data will be LOST when the application restarts!`);\n        const row = {\n            id: generateId(),\n            user_name: userName,\n            criteria_weights: criteriaWeights,\n            global_weights: globalWeights,\n            consistency_results: consistencyResults,\n            hierarchy_data: hierarchyData,\n            created_at: now,\n            updated_at: now\n        };\n        return memSave(row);\n    }\n    /* Neon mode ------------------------------------------------------- */ try {\n        await initPromise;\n        console.log(`Checking for existing evaluation for user: ${userName}`);\n        const existing = await sql`\r\n      SELECT id FROM ahp_evaluations WHERE user_name = ${userName}\r\n    `;\n        if (existing.length) {\n            console.log(`Updating existing evaluation for user: ${userName}`);\n            const res = await sql`\r\n        UPDATE ahp_evaluations SET\r\n          criteria_weights   = ${JSON.stringify(criteriaWeights)},\r\n          global_weights     = ${JSON.stringify(globalWeights)},\r\n          consistency_results= ${JSON.stringify(consistencyResults)},\r\n          hierarchy_data     = ${JSON.stringify(hierarchyData)},\r\n          updated_at         = ${now}\r\n        WHERE user_name      = ${userName}\r\n        RETURNING *\r\n      `;\n            console.log(`Neon: Updated evaluation for user ${userName}`);\n            return parseRow(res[0]);\n        }\n        console.log(`Creating new evaluation for user: ${userName}`);\n        const res = await sql`\r\n      INSERT INTO ahp_evaluations (\r\n        id, user_name, criteria_weights, global_weights,\r\n        consistency_results, hierarchy_data, created_at, updated_at\r\n      ) VALUES (\r\n        ${generateId()}, ${userName}, ${JSON.stringify(criteriaWeights)}, ${JSON.stringify(globalWeights)},\r\n        ${JSON.stringify(consistencyResults)}, ${JSON.stringify(hierarchyData)}, ${now}, ${now}\r\n      )\r\n      RETURNING *\r\n    `;\n        console.log(`Neon: Inserted new evaluation for user ${userName}`);\n        return parseRow(res[0]);\n    } catch (error) {\n        console.error(\"AHP kaydetme hatası:\", error);\n        console.error(\"Error details:\", {\n            message: error.message,\n            stack: error.stack,\n            userName,\n            connectionError\n        });\n        throw error;\n    }\n}\n/* READ - all */ async function getAllAHPEvaluations() {\n    if (!neonReady) {\n        console.warn(`⚠️  Neon DB not ready (${connectionError}), getting all from in-memory. Count: ${mem.length}`);\n        console.warn(`⚠️  In-memory data will be LOST when the application restarts!`);\n        return [\n            ...mem\n        ] // Return a copy to avoid mutations\n        ;\n    }\n    try {\n        await initPromise;\n        console.log(\"Fetching all evaluations from Neon...\");\n        const res = await sql`SELECT * FROM ahp_evaluations ORDER BY updated_at DESC`;\n        console.log(`Neon: Fetched ${res.length} evaluations`);\n        return res.map(parseRow);\n    } catch (error) {\n        console.error(\"AHP verilerini getirme hatası:\", error);\n        console.error(\"Error details:\", {\n            message: error.message,\n            stack: error.stack,\n            connectionError,\n            neonReady\n        });\n        // Fallback to in-memory if database fails\n        console.log(\"Falling back to in-memory storage due to database error\");\n        return [\n            ...mem\n        ];\n    }\n}\n/* READ - by user */ async function getAHPEvaluationByUser(userName) {\n    if (!neonReady) {\n        console.log(`Neon DB not ready (${connectionError}), getting by user from in-memory: ${userName}`);\n        return memFindByUser(userName);\n    }\n    try {\n        await initPromise;\n        console.log(`Fetching evaluation for user: ${userName}`);\n        const res = await sql`SELECT * FROM ahp_evaluations WHERE user_name = ${userName}`;\n        console.log(`Neon: Fetched evaluation for user ${userName}. Found: ${res.length > 0}`);\n        return res.length ? parseRow(res[0]) : null;\n    } catch (error) {\n        console.error(\"Kullanıcı AHP verisi getirme hatası:\", error);\n        console.error(\"Error details:\", {\n            message: error.message,\n            userName,\n            connectionError\n        });\n        // Fallback to in-memory\n        return memFindByUser(userName);\n    }\n}\n/* DELETE single */ async function deleteAHPEvaluation(id) {\n    if (!neonReady) {\n        console.log(`Neon DB not ready (${connectionError}), deleting from in-memory: ${id}`);\n        const i = mem.findIndex((e)=>e.id === id);\n        if (i !== -1) {\n            mem.splice(i, 1);\n            console.log(`Deleted from in-memory. Remaining count: ${mem.length}`);\n            return true;\n        }\n        console.log(\"Item not found in in-memory storage\");\n        return false;\n    }\n    try {\n        await initPromise;\n        console.log(`Deleting evaluation with ID: ${id}`);\n        const result = await sql`DELETE FROM ahp_evaluations WHERE id = ${id} RETURNING id`;\n        const deleted = result.length > 0;\n        console.log(`Neon: Delete operation completed. Deleted: ${deleted}`);\n        return deleted;\n    } catch (error) {\n        console.error(`Neon: Error deleting single evaluation with ID ${id}:`, error);\n        console.error(\"Error details:\", {\n            message: error.message,\n            id,\n            connectionError\n        });\n        return false;\n    }\n}\n/* DELETE multiple */ async function deleteMultipleAHPEvaluations(evaluationIds) {\n    if (!neonReady) {\n        console.log(`Neon DB not ready (${connectionError}), deleting multiple from in-memory: ${evaluationIds.length} items`);\n        let deletedCount = 0;\n        evaluationIds.forEach((id)=>{\n            const i = mem.findIndex((r)=>r.id === id);\n            if (i !== -1) {\n                mem.splice(i, 1);\n                deletedCount++;\n            }\n        });\n        console.log(`Deleted ${deletedCount} items from in-memory. Remaining count: ${mem.length}`);\n        return deletedCount > 0;\n    }\n    try {\n        if (evaluationIds.length === 0) {\n            console.log(\"Neon: No evaluation IDs provided for multiple delete\");\n            return true;\n        }\n        await initPromise;\n        console.log(`Deleting multiple evaluations: ${evaluationIds.length} items`);\n        const result = await sql`DELETE FROM ahp_evaluations WHERE id = ANY(${evaluationIds}) RETURNING id`;\n        const deletedCount = result.length;\n        console.log(`Neon: Deleted ${deletedCount} out of ${evaluationIds.length} evaluations`);\n        return deletedCount > 0;\n    } catch (error) {\n        console.error(`Neon: Error deleting multiple evaluations:`, error);\n        console.error(\"Error details:\", {\n            message: error.message,\n            evaluationIds,\n            connectionError\n        });\n        return false;\n    }\n}\n/* DELETE all */ async function deleteAllAHPEvaluations() {\n    if (!neonReady) {\n        console.log(`Neon DB not ready (${connectionError}), deleting all from in-memory`);\n        const previousCount = mem.length;\n        mem.length = 0;\n        console.log(`Deleted all ${previousCount} items from in-memory`);\n        return true;\n    }\n    try {\n        await initPromise;\n        console.log(\"Deleting all evaluations from Neon...\");\n        const result = await sql`DELETE FROM ahp_evaluations RETURNING id`;\n        const deletedCount = result.length;\n        console.log(`Neon: Deleted all ${deletedCount} evaluations`);\n        return true;\n    } catch (error) {\n        console.error(\"Neon: Error deleting all evaluations:\", error);\n        console.error(\"Error details:\", {\n            message: error.message,\n            connectionError\n        });\n        return false;\n    }\n}\n/* Calculate average weights */ function calculateAverageWeights(evaluations) {\n    if (evaluations.length === 0) return {};\n    const allWeights = evaluations.map((evaluation)=>evaluation.global_weights);\n    const criteriaIds = Object.keys(allWeights[0] || {});\n    const averageWeights = {};\n    criteriaIds.forEach((criteriaId)=>{\n        const weights = allWeights.map((w)=>w[criteriaId] || 0);\n        averageWeights[criteriaId] = weights.reduce((sum, weight)=>sum + weight, 0) / weights.length;\n    });\n    return averageWeights;\n}\n/* Storage stats */ async function getStorageStats() {\n    if (!neonReady) {\n        return {\n            totalEvaluations: mem.length,\n            lastUpdated: mem.length > 0 ? mem.sort((a, b)=>new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime())[0].updated_at : null,\n            storage: \"in-memory\",\n            connectionError\n        };\n    }\n    try {\n        await initPromise;\n        const result = await sql`\r\n      SELECT \r\n        COUNT(*) as total_evaluations,\r\n        MAX(updated_at) as last_updated\r\n      FROM ahp_evaluations\r\n    `;\n        return {\n            totalEvaluations: Number(result[0].total_evaluations),\n            lastUpdated: result[0].last_updated,\n            storage: \"neon\",\n            connectionError: null\n        };\n    } catch (error) {\n        console.error(\"İstatistik alma hatası:\", error);\n        return {\n            totalEvaluations: 0,\n            lastUpdated: null,\n            storage: \"error\",\n            connectionError: error.message\n        };\n    }\n}\n/* Database connection check */ async function checkDatabaseConnection() {\n    if (!neonReady) {\n        console.log(`Database connection check failed: ${connectionError}`);\n        return false;\n    }\n    try {\n        await initPromise;\n        // Test the connection with a simple query\n        await sql`SELECT 1 as test`;\n        console.log(\"Database connection test successful\");\n        return true;\n    } catch (error) {\n        console.error(\"Database connection test failed:\", error);\n        return false;\n    }\n}\n/* ------------------------------------------------------------------ */ /*  Utility                                                           */ /* ------------------------------------------------------------------ */ function parseRow(row) {\n    const safeJsonParse = (value, fallback = {})=>{\n        if (typeof value === \"object\" && value !== null) {\n            return value // Already parsed\n            ;\n        }\n        if (typeof value === \"string\") {\n            try {\n                return JSON.parse(value);\n            } catch (error) {\n                console.error(\"JSON parse error for value:\", value, error);\n                return fallback;\n            }\n        }\n        return fallback;\n    };\n    return {\n        id: row.id,\n        user_name: row.user_name,\n        criteria_weights: safeJsonParse(row.criteria_weights, {}),\n        global_weights: safeJsonParse(row.global_weights, {}),\n        consistency_results: safeJsonParse(row.consistency_results, {}),\n        hierarchy_data: safeJsonParse(row.hierarchy_data, {}),\n        created_at: row.created_at,\n        updated_at: row.updated_at\n    };\n}\nfunction generateId() {\n    return Date.now().toString(36) + Math.random().toString(36).slice(2);\n}\n// Export connection status for debugging\nfunction getConnectionStatus() {\n    return {\n        neonReady,\n        connectionError,\n        hasEnvironmentUrl: !!process.env.DATABASE_URL,\n        urlValid: process.env.DATABASE_URL ? validateDatabaseUrl(process.env.DATABASE_URL) : false\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFPSCxLQUFLRCxHQUFHLEdBQUc4RCxRQUFRLENBQUMsTUFBTUMsS0FBS0MsTUFBTSxHQUFHRixRQUFRLENBQUMsSUFBSUcsS0FBSyxDQUFDO0FBQ3BFO0FBRUEseUNBQXlDO0FBQ2xDLFNBQVNDO0lBQ2QsT0FBTztRQUNMMUc7UUFDQUM7UUFDQTBHLG1CQUFtQixDQUFDLENBQUNsRyxRQUFRQyxHQUFHLENBQUNDLFlBQVk7UUFDN0NpRyxVQUFVbkcsUUFBUUMsR0FBRyxDQUFDQyxZQUFZLEdBQUdULG9CQUFvQk8sUUFBUUMsR0FBRyxDQUFDQyxZQUFZLElBQUk7SUFDdkY7QUFDRiIsInNvdXJjZXMiOlsiRDpcXFN1cnVjdXB1YW5zaXN0ZW1pMDgyMDI1XFxTUFNfRGlzaXBsaW5BeXItbWwtXzA0MDkyMDI1XFxsaWJcXG5lb24tZGIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbmVvbiB9IGZyb20gXCJAbmVvbmRhdGFiYXNlL3NlcnZlcmxlc3NcIlxyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbi8qICBOZW9uIGNvbm5lY3Rpb24gKG9yIGluLW1lbW9yeSBmYWxsYmFjaykgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxubGV0IHNxbDogUmV0dXJuVHlwZTx0eXBlb2YgbmVvbj4gfCBudWxsID0gbnVsbFxyXG5sZXQgbmVvblJlYWR5ID0gZmFsc2VcclxubGV0IGNvbm5lY3Rpb25FcnJvcjogc3RyaW5nIHwgbnVsbCA9IG51bGxcclxuXHJcbi8vIERBVEFCQVNFX1VSTCB2YWxpZGF0aW9uXHJcbmZ1bmN0aW9uIHZhbGlkYXRlRGF0YWJhc2VVcmwodXJsOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICB0cnkge1xyXG4gICAgLy8gTmVvbiBVUkwgc2hvdWxkIHN0YXJ0IHdpdGggcG9zdGdyZXNxbDovLyBvciBwb3N0Z3JlczovL1xyXG4gICAgaWYgKCF1cmwuc3RhcnRzV2l0aChcInBvc3RncmVzcWw6Ly9cIikgJiYgIXVybC5zdGFydHNXaXRoKFwicG9zdGdyZXM6Ly9cIikpIHtcclxuICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICB9XHJcblxyXG4gICAgLy8gQmFzaWMgVVJMIHZhbGlkYXRpb25cclxuICAgIGNvbnN0IHVybE9iaiA9IG5ldyBVUkwodXJsKVxyXG4gICAgcmV0dXJuIHVybE9iai5ob3N0bmFtZSAmJiB1cmxPYmoucGF0aG5hbWVcclxuICB9IGNhdGNoIHtcclxuICAgIHJldHVybiBmYWxzZVxyXG4gIH1cclxufVxyXG5cclxudHJ5IHtcclxuICBpZiAocHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcIkRBVEFCQVNFX1VSTCBmb3VuZCwgdmFsaWRhdGluZy4uLlwiKVxyXG5cclxuICAgIGlmICghdmFsaWRhdGVEYXRhYmFzZVVybChwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwpKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgREFUQUJBU0VfVVJMIGZvcm1hdC4gRXhwZWN0ZWQgcG9zdGdyZXNxbDovLyBvciBwb3N0Z3JlczovLyBVUkxcIilcclxuICAgIH1cclxuXHJcbiAgICBjb25zb2xlLmxvZyhcIkRBVEFCQVNFX1VSTCBpcyB2YWxpZCwgY3JlYXRpbmcgTmVvbiBjb25uZWN0aW9uLi4uXCIpXHJcbiAgICBzcWwgPSBuZW9uKHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTClcclxuICAgIG5lb25SZWFkeSA9IHRydWVcclxuICAgIGNvbnNvbGUubG9nKFwiTmVvbiBjb25uZWN0aW9uIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5XCIpXHJcbiAgfSBlbHNlIHtcclxuICAgIGNvbnNvbGUud2FybihcIuKaoO+4jyAgREFUQUJBU0VfVVJMIGVudmlyb25tZW50IHZhcmlhYmxlIG5vdCBmb3VuZCFcIilcclxuICAgIGNvbnNvbGUud2FybihcIuKaoO+4jyAgVXNpbmcgaW4tbWVtb3J5IHN0b3JhZ2UgLSBkYXRhIHdpbGwgYmUgbG9zdCBvbiByZXN0YXJ0XCIpXHJcbiAgICBjb25zb2xlLndhcm4oXCLimqDvuI8gIFRvIHBlcnNpc3QgZGF0YSwgY3JlYXRlIGEgLmVudiBmaWxlIHdpdGggREFUQUJBU0VfVVJMXCIpXHJcbiAgICBjb25uZWN0aW9uRXJyb3IgPSBcIkRBVEFCQVNFX1VSTCBlbnZpcm9ubWVudCB2YXJpYWJsZSBub3QgZm91bmRcIlxyXG4gIH1cclxufSBjYXRjaCAoZSkge1xyXG4gIGNvbnNvbGUuZXJyb3IoXCLinYwgTmVvbiBjb25uZWN0aW9uIGluaXRpYWxpemF0aW9uIGVycm9yOlwiLCBlKVxyXG4gIGNvbnNvbGUud2FybihcIuKaoO+4jyAgRmFsbGluZyBiYWNrIHRvIGluLW1lbW9yeSBzdG9yYWdlIC0gZGF0YSB3aWxsIGJlIGxvc3Qgb24gcmVzdGFydFwiKVxyXG4gIGNvbm5lY3Rpb25FcnJvciA9IGUgaW5zdGFuY2VvZiBFcnJvciA/IGUubWVzc2FnZSA6IFwiVW5rbm93biBjb25uZWN0aW9uIGVycm9yXCJcclxuICBuZW9uUmVhZHkgPSBmYWxzZVxyXG59XHJcblxyXG4vLyBURVNUIE1PREU6IFNpbXVsYXRlIGRhdGFiYXNlIGNvbm5lY3Rpb24gZm9yIHRlc3RpbmdcclxuaWYgKCFuZW9uUmVhZHkgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcclxuICBjb25zb2xlLmxvZyhcIvCfp6ogVEVTVCBNT0RFOiBTaW11bGF0aW5nIGRhdGFiYXNlIGNvbm5lY3Rpb24uLi5cIilcclxuICBuZW9uUmVhZHkgPSB0cnVlXHJcbiAgY29ubmVjdGlvbkVycm9yID0gbnVsbFxyXG4gIGNvbnNvbGUubG9nKFwi4pyFIFRlc3QgbW9kZTogRGF0YWJhc2UgY29ubmVjdGlvbiBzaW11bGF0ZWRcIilcclxufVxyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbi8qICBPbmUtdGltZSB0YWJsZSBjcmVhdGlvbiBwcm9taXNlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlVGFibGVzKCkge1xyXG4gIGlmICghbmVvblJlYWR5IHx8ICFzcWwpIHtcclxuICAgIGNvbnNvbGUubG9nKFwiU2tpcHBpbmcgdGFibGUgY3JlYXRpb24gLSBOZW9uIG5vdCByZWFkeVwiKVxyXG4gICAgcmV0dXJuXHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc29sZS5sb2coXCJDcmVhdGluZyB0YWJsZXMgaWYgdGhleSBkb24ndCBleGlzdC4uLlwiKVxyXG5cclxuICAgIC8vIENyZWF0ZSB0YWJsZSBmaXJzdFxyXG4gICAgYXdhaXQgc3FsYFxyXG4gICAgICBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBhaHBfZXZhbHVhdGlvbnMgKFxyXG4gICAgICAgIGlkIFRFWFQgUFJJTUFSWSBLRVksXHJcbiAgICAgICAgdXNlcl9uYW1lIFRFWFQgTk9UIE5VTEwsXHJcbiAgICAgICAgY3JpdGVyaWFfd2VpZ2h0cyBKU09OQiBOT1QgTlVMTCxcclxuICAgICAgICBnbG9iYWxfd2VpZ2h0cyBKU09OQiBOT1QgTlVMTCxcclxuICAgICAgICBjb25zaXN0ZW5jeV9yZXN1bHRzIEpTT05CIE5PVCBOVUxMLFxyXG4gICAgICAgIGhpZXJhcmNoeV9kYXRhIEpTT05CIE5PVCBOVUxMLFxyXG4gICAgICAgIGNyZWF0ZWRfYXQgVElNRVNUQU1QIFdJVEggVElNRSBaT05FIERFRkFVTFQgTk9XKCksXHJcbiAgICAgICAgdXBkYXRlZF9hdCBUSU1FU1RBTVAgV0lUSCBUSU1FIFpPTkUgREVGQVVMVCBOT1coKVxyXG4gICAgICApXHJcbiAgICBgXHJcblxyXG4gICAgLy8gQ3JlYXRlIGluZGV4ZXMgc2VwYXJhdGVseVxyXG4gICAgYXdhaXQgc3FsYFxyXG4gICAgICBDUkVBVEUgSU5ERVggSUYgTk9UIEVYSVNUUyBpZHhfYWhwX2V2YWx1YXRpb25zX3VzZXJfbmFtZVxyXG4gICAgICBPTiBhaHBfZXZhbHVhdGlvbnModXNlcl9uYW1lKVxyXG4gICAgYFxyXG5cclxuICAgIGF3YWl0IHNxbGBcclxuICAgICAgQ1JFQVRFIElOREVYIElGIE5PVCBFWElTVFMgaWR4X2FocF9ldmFsdWF0aW9uc191cGRhdGVkX2F0XHJcbiAgICAgIE9OIGFocF9ldmFsdWF0aW9ucyh1cGRhdGVkX2F0KVxyXG4gICAgYFxyXG5cclxuICAgIGNvbnNvbGUubG9nKFwiTmVvbjogYWhwX2V2YWx1YXRpb25zIHRhYmxlIGFuZCBpbmRleGVzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5XCIpXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJUYWJsZSBjcmVhdGlvbiBlcnJvcjpcIiwgZXJyb3IpXHJcbiAgICB0aHJvdyBlcnJvclxyXG4gIH1cclxufVxyXG5cclxuY29uc3QgaW5pdFByb21pc2U6IFByb21pc2U8dm9pZD4gPSBuZW9uUmVhZHkgPyBjcmVhdGVUYWJsZXMoKSA6IFByb21pc2UucmVzb2x2ZSgpXHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuLyogIFR5cGVzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEFIUEV2YWx1YXRpb24ge1xyXG4gIGlkOiBzdHJpbmdcclxuICB1c2VyX25hbWU6IHN0cmluZ1xyXG4gIGNyaXRlcmlhX3dlaWdodHM6IFJlY29yZDxzdHJpbmcsIG51bWJlcj5cclxuICBnbG9iYWxfd2VpZ2h0czogUmVjb3JkPHN0cmluZywgbnVtYmVyPlxyXG4gIGNvbnNpc3RlbmN5X3Jlc3VsdHM6IFJlY29yZDxzdHJpbmcsIGFueT5cclxuICBoaWVyYXJjaHlfZGF0YTogUmVjb3JkPHN0cmluZywgbnVtYmVyW11bXT5cclxuICBjcmVhdGVkX2F0OiBzdHJpbmdcclxuICB1cGRhdGVkX2F0OiBzdHJpbmdcclxufVxyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbi8qICBJbi1tZW1vcnkgc3RvcmFnZSAodXNlZCB3aGVuIE5lb24gaXNuJ3QgY29uZmlndXJlZCkgICAgICAgICAgICAgICAqL1xyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuY29uc3QgbWVtOiBBSFBFdmFsdWF0aW9uW10gPSBbXVxyXG5jb25zdCBtZW1GaW5kQnlVc2VyID0gKHU6IHN0cmluZykgPT4gbWVtLmZpbmQoKGUpID0+IGUudXNlcl9uYW1lID09PSB1KSA/PyBudWxsXHJcbmNvbnN0IG1lbVNhdmUgPSAocm93OiBBSFBFdmFsdWF0aW9uKSA9PiB7XHJcbiAgY29uc3QgaSA9IG1lbS5maW5kSW5kZXgoKGUpID0+IGUudXNlcl9uYW1lID09PSByb3cudXNlcl9uYW1lKVxyXG4gIGkgPT09IC0xID8gbWVtLnB1c2gocm93KSA6IChtZW1baV0gPSByb3cpXHJcbiAgcmV0dXJuIHJvd1xyXG59XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuLyogIFB1YmxpYyBoZWxwZXJzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW5pdGlhbGl6ZURhdGFiYXNlKCkge1xyXG4gIHRyeSB7XHJcbiAgICBhd2FpdCBpbml0UHJvbWlzZVxyXG4gICAgY29uc29sZS5sb2coXCJEYXRhYmFzZSBpbml0aWFsaXphdGlvbiBjb21wbGV0ZWRcIilcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihcIkRhdGFiYXNlIGluaXRpYWxpemF0aW9uIGZhaWxlZDpcIiwgZXJyb3IpXHJcbiAgICB0aHJvdyBlcnJvclxyXG4gIH1cclxufVxyXG5cclxuLyogQ1JFQVRFIC8gVVBEQVRFICh1cHNlcnQgYnkgdXNlcikgKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNhdmVBSFBFdmFsdWF0aW9uKFxyXG4gIHVzZXJOYW1lOiBzdHJpbmcsXHJcbiAgY3JpdGVyaWFXZWlnaHRzOiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+LFxyXG4gIGdsb2JhbFdlaWdodHM6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4sXHJcbiAgY29uc2lzdGVuY3lSZXN1bHRzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+LFxyXG4gIGhpZXJhcmNoeURhdGE6IFJlY29yZDxzdHJpbmcsIG51bWJlcltdW10+LFxyXG4pOiBQcm9taXNlPEFIUEV2YWx1YXRpb24+IHtcclxuICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcclxuXHJcbiAgLyogSW4tbWVtb3J5IG1vZGUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuICBpZiAoIW5lb25SZWFkeSkge1xyXG4gICAgY29uc29sZS53YXJuKGDimqDvuI8gIE5lb24gREIgbm90IHJlYWR5ICgke2Nvbm5lY3Rpb25FcnJvcn0pLCBzYXZpbmcgdG8gaW4tbWVtb3J5IGZvciB1c2VyOiAke3VzZXJOYW1lfWApXHJcbiAgICBjb25zb2xlLndhcm4oYOKaoO+4jyAgVGhpcyBkYXRhIHdpbGwgYmUgTE9TVCB3aGVuIHRoZSBhcHBsaWNhdGlvbiByZXN0YXJ0cyFgKVxyXG4gICAgY29uc3Qgcm93OiBBSFBFdmFsdWF0aW9uID0ge1xyXG4gICAgICBpZDogZ2VuZXJhdGVJZCgpLFxyXG4gICAgICB1c2VyX25hbWU6IHVzZXJOYW1lLFxyXG4gICAgICBjcml0ZXJpYV93ZWlnaHRzOiBjcml0ZXJpYVdlaWdodHMsXHJcbiAgICAgIGdsb2JhbF93ZWlnaHRzOiBnbG9iYWxXZWlnaHRzLFxyXG4gICAgICBjb25zaXN0ZW5jeV9yZXN1bHRzOiBjb25zaXN0ZW5jeVJlc3VsdHMsXHJcbiAgICAgIGhpZXJhcmNoeV9kYXRhOiBoaWVyYXJjaHlEYXRhLFxyXG4gICAgICBjcmVhdGVkX2F0OiBub3csXHJcbiAgICAgIHVwZGF0ZWRfYXQ6IG5vdyxcclxuICAgIH1cclxuICAgIHJldHVybiBtZW1TYXZlKHJvdylcclxuICB9XHJcblxyXG4gIC8qIE5lb24gbW9kZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbiAgdHJ5IHtcclxuICAgIGF3YWl0IGluaXRQcm9taXNlXHJcblxyXG4gICAgY29uc29sZS5sb2coYENoZWNraW5nIGZvciBleGlzdGluZyBldmFsdWF0aW9uIGZvciB1c2VyOiAke3VzZXJOYW1lfWApXHJcbiAgICBjb25zdCBleGlzdGluZyA9IGF3YWl0IHNxbCFgXHJcbiAgICAgIFNFTEVDVCBpZCBGUk9NIGFocF9ldmFsdWF0aW9ucyBXSEVSRSB1c2VyX25hbWUgPSAke3VzZXJOYW1lfVxyXG4gICAgYFxyXG5cclxuICAgIGlmIChleGlzdGluZy5sZW5ndGgpIHtcclxuICAgICAgY29uc29sZS5sb2coYFVwZGF0aW5nIGV4aXN0aW5nIGV2YWx1YXRpb24gZm9yIHVzZXI6ICR7dXNlck5hbWV9YClcclxuICAgICAgY29uc3QgcmVzID0gYXdhaXQgc3FsIWBcclxuICAgICAgICBVUERBVEUgYWhwX2V2YWx1YXRpb25zIFNFVFxyXG4gICAgICAgICAgY3JpdGVyaWFfd2VpZ2h0cyAgID0gJHtKU09OLnN0cmluZ2lmeShjcml0ZXJpYVdlaWdodHMpfSxcclxuICAgICAgICAgIGdsb2JhbF93ZWlnaHRzICAgICA9ICR7SlNPTi5zdHJpbmdpZnkoZ2xvYmFsV2VpZ2h0cyl9LFxyXG4gICAgICAgICAgY29uc2lzdGVuY3lfcmVzdWx0cz0gJHtKU09OLnN0cmluZ2lmeShjb25zaXN0ZW5jeVJlc3VsdHMpfSxcclxuICAgICAgICAgIGhpZXJhcmNoeV9kYXRhICAgICA9ICR7SlNPTi5zdHJpbmdpZnkoaGllcmFyY2h5RGF0YSl9LFxyXG4gICAgICAgICAgdXBkYXRlZF9hdCAgICAgICAgID0gJHtub3d9XHJcbiAgICAgICAgV0hFUkUgdXNlcl9uYW1lICAgICAgPSAke3VzZXJOYW1lfVxyXG4gICAgICAgIFJFVFVSTklORyAqXHJcbiAgICAgIGBcclxuICAgICAgY29uc29sZS5sb2coYE5lb246IFVwZGF0ZWQgZXZhbHVhdGlvbiBmb3IgdXNlciAke3VzZXJOYW1lfWApXHJcbiAgICAgIHJldHVybiBwYXJzZVJvdyhyZXNbMF0pXHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coYENyZWF0aW5nIG5ldyBldmFsdWF0aW9uIGZvciB1c2VyOiAke3VzZXJOYW1lfWApXHJcbiAgICBjb25zdCByZXMgPSBhd2FpdCBzcWwhYFxyXG4gICAgICBJTlNFUlQgSU5UTyBhaHBfZXZhbHVhdGlvbnMgKFxyXG4gICAgICAgIGlkLCB1c2VyX25hbWUsIGNyaXRlcmlhX3dlaWdodHMsIGdsb2JhbF93ZWlnaHRzLFxyXG4gICAgICAgIGNvbnNpc3RlbmN5X3Jlc3VsdHMsIGhpZXJhcmNoeV9kYXRhLCBjcmVhdGVkX2F0LCB1cGRhdGVkX2F0XHJcbiAgICAgICkgVkFMVUVTIChcclxuICAgICAgICAke2dlbmVyYXRlSWQoKX0sICR7dXNlck5hbWV9LCAke0pTT04uc3RyaW5naWZ5KGNyaXRlcmlhV2VpZ2h0cyl9LCAke0pTT04uc3RyaW5naWZ5KGdsb2JhbFdlaWdodHMpfSxcclxuICAgICAgICAke0pTT04uc3RyaW5naWZ5KGNvbnNpc3RlbmN5UmVzdWx0cyl9LCAke0pTT04uc3RyaW5naWZ5KGhpZXJhcmNoeURhdGEpfSwgJHtub3d9LCAke25vd31cclxuICAgICAgKVxyXG4gICAgICBSRVRVUk5JTkcgKlxyXG4gICAgYFxyXG4gICAgY29uc29sZS5sb2coYE5lb246IEluc2VydGVkIG5ldyBldmFsdWF0aW9uIGZvciB1c2VyICR7dXNlck5hbWV9YClcclxuICAgIHJldHVybiBwYXJzZVJvdyhyZXNbMF0pXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJBSFAga2F5ZGV0bWUgaGF0YXPEsTpcIiwgZXJyb3IpXHJcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZGV0YWlsczpcIiwge1xyXG4gICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxyXG4gICAgICBzdGFjazogZXJyb3Iuc3RhY2ssXHJcbiAgICAgIHVzZXJOYW1lLFxyXG4gICAgICBjb25uZWN0aW9uRXJyb3IsXHJcbiAgICB9KVxyXG4gICAgdGhyb3cgZXJyb3JcclxuICB9XHJcbn1cclxuXHJcbi8qIFJFQUQgLSBhbGwgKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbEFIUEV2YWx1YXRpb25zKCk6IFByb21pc2U8QUhQRXZhbHVhdGlvbltdPiB7XHJcbiAgaWYgKCFuZW9uUmVhZHkpIHtcclxuICAgIGNvbnNvbGUud2Fybihg4pqg77iPICBOZW9uIERCIG5vdCByZWFkeSAoJHtjb25uZWN0aW9uRXJyb3J9KSwgZ2V0dGluZyBhbGwgZnJvbSBpbi1tZW1vcnkuIENvdW50OiAke21lbS5sZW5ndGh9YClcclxuICAgIGNvbnNvbGUud2Fybihg4pqg77iPICBJbi1tZW1vcnkgZGF0YSB3aWxsIGJlIExPU1Qgd2hlbiB0aGUgYXBwbGljYXRpb24gcmVzdGFydHMhYClcclxuICAgIHJldHVybiBbLi4ubWVtXSAvLyBSZXR1cm4gYSBjb3B5IHRvIGF2b2lkIG11dGF0aW9uc1xyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIGF3YWl0IGluaXRQcm9taXNlXHJcbiAgICBjb25zb2xlLmxvZyhcIkZldGNoaW5nIGFsbCBldmFsdWF0aW9ucyBmcm9tIE5lb24uLi5cIilcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHNxbCFgU0VMRUNUICogRlJPTSBhaHBfZXZhbHVhdGlvbnMgT1JERVIgQlkgdXBkYXRlZF9hdCBERVNDYFxyXG4gICAgY29uc29sZS5sb2coYE5lb246IEZldGNoZWQgJHtyZXMubGVuZ3RofSBldmFsdWF0aW9uc2ApXHJcbiAgICByZXR1cm4gcmVzLm1hcChwYXJzZVJvdylcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihcIkFIUCB2ZXJpbGVyaW5pIGdldGlybWUgaGF0YXPEsTpcIiwgZXJyb3IpXHJcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZGV0YWlsczpcIiwge1xyXG4gICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxyXG4gICAgICBzdGFjazogZXJyb3Iuc3RhY2ssXHJcbiAgICAgIGNvbm5lY3Rpb25FcnJvcixcclxuICAgICAgbmVvblJlYWR5LFxyXG4gICAgfSlcclxuXHJcbiAgICAvLyBGYWxsYmFjayB0byBpbi1tZW1vcnkgaWYgZGF0YWJhc2UgZmFpbHNcclxuICAgIGNvbnNvbGUubG9nKFwiRmFsbGluZyBiYWNrIHRvIGluLW1lbW9yeSBzdG9yYWdlIGR1ZSB0byBkYXRhYmFzZSBlcnJvclwiKVxyXG4gICAgcmV0dXJuIFsuLi5tZW1dXHJcbiAgfVxyXG59XHJcblxyXG4vKiBSRUFEIC0gYnkgdXNlciAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QUhQRXZhbHVhdGlvbkJ5VXNlcih1c2VyTmFtZTogc3RyaW5nKTogUHJvbWlzZTxBSFBFdmFsdWF0aW9uIHwgbnVsbD4ge1xyXG4gIGlmICghbmVvblJlYWR5KSB7XHJcbiAgICBjb25zb2xlLmxvZyhgTmVvbiBEQiBub3QgcmVhZHkgKCR7Y29ubmVjdGlvbkVycm9yfSksIGdldHRpbmcgYnkgdXNlciBmcm9tIGluLW1lbW9yeTogJHt1c2VyTmFtZX1gKVxyXG4gICAgcmV0dXJuIG1lbUZpbmRCeVVzZXIodXNlck5hbWUpXHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgYXdhaXQgaW5pdFByb21pc2VcclxuICAgIGNvbnNvbGUubG9nKGBGZXRjaGluZyBldmFsdWF0aW9uIGZvciB1c2VyOiAke3VzZXJOYW1lfWApXHJcbiAgICBjb25zdCByZXMgPSBhd2FpdCBzcWwhYFNFTEVDVCAqIEZST00gYWhwX2V2YWx1YXRpb25zIFdIRVJFIHVzZXJfbmFtZSA9ICR7dXNlck5hbWV9YFxyXG4gICAgY29uc29sZS5sb2coYE5lb246IEZldGNoZWQgZXZhbHVhdGlvbiBmb3IgdXNlciAke3VzZXJOYW1lfS4gRm91bmQ6ICR7cmVzLmxlbmd0aCA+IDB9YClcclxuICAgIHJldHVybiByZXMubGVuZ3RoID8gcGFyc2VSb3cocmVzWzBdKSA6IG51bGxcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihcIkt1bGxhbsSxY8SxIEFIUCB2ZXJpc2kgZ2V0aXJtZSBoYXRhc8SxOlwiLCBlcnJvcilcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBkZXRhaWxzOlwiLCB7XHJcbiAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXHJcbiAgICAgIHVzZXJOYW1lLFxyXG4gICAgICBjb25uZWN0aW9uRXJyb3IsXHJcbiAgICB9KVxyXG5cclxuICAgIC8vIEZhbGxiYWNrIHRvIGluLW1lbW9yeVxyXG4gICAgcmV0dXJuIG1lbUZpbmRCeVVzZXIodXNlck5hbWUpXHJcbiAgfVxyXG59XHJcblxyXG4vKiBERUxFVEUgc2luZ2xlICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVBSFBFdmFsdWF0aW9uKGlkOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICBpZiAoIW5lb25SZWFkeSkge1xyXG4gICAgY29uc29sZS5sb2coYE5lb24gREIgbm90IHJlYWR5ICgke2Nvbm5lY3Rpb25FcnJvcn0pLCBkZWxldGluZyBmcm9tIGluLW1lbW9yeTogJHtpZH1gKVxyXG4gICAgY29uc3QgaSA9IG1lbS5maW5kSW5kZXgoKGUpID0+IGUuaWQgPT09IGlkKVxyXG4gICAgaWYgKGkgIT09IC0xKSB7XHJcbiAgICAgIG1lbS5zcGxpY2UoaSwgMSlcclxuICAgICAgY29uc29sZS5sb2coYERlbGV0ZWQgZnJvbSBpbi1tZW1vcnkuIFJlbWFpbmluZyBjb3VudDogJHttZW0ubGVuZ3RofWApXHJcbiAgICAgIHJldHVybiB0cnVlXHJcbiAgICB9XHJcbiAgICBjb25zb2xlLmxvZyhcIkl0ZW0gbm90IGZvdW5kIGluIGluLW1lbW9yeSBzdG9yYWdlXCIpXHJcbiAgICByZXR1cm4gZmFsc2VcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICBhd2FpdCBpbml0UHJvbWlzZVxyXG4gICAgY29uc29sZS5sb2coYERlbGV0aW5nIGV2YWx1YXRpb24gd2l0aCBJRDogJHtpZH1gKVxyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc3FsIWBERUxFVEUgRlJPTSBhaHBfZXZhbHVhdGlvbnMgV0hFUkUgaWQgPSAke2lkfSBSRVRVUk5JTkcgaWRgXHJcbiAgICBjb25zdCBkZWxldGVkID0gcmVzdWx0Lmxlbmd0aCA+IDBcclxuICAgIGNvbnNvbGUubG9nKGBOZW9uOiBEZWxldGUgb3BlcmF0aW9uIGNvbXBsZXRlZC4gRGVsZXRlZDogJHtkZWxldGVkfWApXHJcbiAgICByZXR1cm4gZGVsZXRlZFxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKGBOZW9uOiBFcnJvciBkZWxldGluZyBzaW5nbGUgZXZhbHVhdGlvbiB3aXRoIElEICR7aWR9OmAsIGVycm9yKVxyXG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGRldGFpbHM6XCIsIHtcclxuICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSxcclxuICAgICAgaWQsXHJcbiAgICAgIGNvbm5lY3Rpb25FcnJvcixcclxuICAgIH0pXHJcbiAgICByZXR1cm4gZmFsc2VcclxuICB9XHJcbn1cclxuXHJcbi8qIERFTEVURSBtdWx0aXBsZSAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVsZXRlTXVsdGlwbGVBSFBFdmFsdWF0aW9ucyhldmFsdWF0aW9uSWRzOiBzdHJpbmdbXSk6IFByb21pc2U8Ym9vbGVhbj4ge1xyXG4gIGlmICghbmVvblJlYWR5KSB7XHJcbiAgICBjb25zb2xlLmxvZyhcclxuICAgICAgYE5lb24gREIgbm90IHJlYWR5ICgke2Nvbm5lY3Rpb25FcnJvcn0pLCBkZWxldGluZyBtdWx0aXBsZSBmcm9tIGluLW1lbW9yeTogJHtldmFsdWF0aW9uSWRzLmxlbmd0aH0gaXRlbXNgLFxyXG4gICAgKVxyXG4gICAgbGV0IGRlbGV0ZWRDb3VudCA9IDBcclxuICAgIGV2YWx1YXRpb25JZHMuZm9yRWFjaCgoaWQpID0+IHtcclxuICAgICAgY29uc3QgaSA9IG1lbS5maW5kSW5kZXgoKHIpID0+IHIuaWQgPT09IGlkKVxyXG4gICAgICBpZiAoaSAhPT0gLTEpIHtcclxuICAgICAgICBtZW0uc3BsaWNlKGksIDEpXHJcbiAgICAgICAgZGVsZXRlZENvdW50KytcclxuICAgICAgfVxyXG4gICAgfSlcclxuICAgIGNvbnNvbGUubG9nKGBEZWxldGVkICR7ZGVsZXRlZENvdW50fSBpdGVtcyBmcm9tIGluLW1lbW9yeS4gUmVtYWluaW5nIGNvdW50OiAke21lbS5sZW5ndGh9YClcclxuICAgIHJldHVybiBkZWxldGVkQ291bnQgPiAwXHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgaWYgKGV2YWx1YXRpb25JZHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiTmVvbjogTm8gZXZhbHVhdGlvbiBJRHMgcHJvdmlkZWQgZm9yIG11bHRpcGxlIGRlbGV0ZVwiKVxyXG4gICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgfVxyXG5cclxuICAgIGF3YWl0IGluaXRQcm9taXNlXHJcbiAgICBjb25zb2xlLmxvZyhgRGVsZXRpbmcgbXVsdGlwbGUgZXZhbHVhdGlvbnM6ICR7ZXZhbHVhdGlvbklkcy5sZW5ndGh9IGl0ZW1zYClcclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHNxbCFgREVMRVRFIEZST00gYWhwX2V2YWx1YXRpb25zIFdIRVJFIGlkID0gQU5ZKCR7ZXZhbHVhdGlvbklkc30pIFJFVFVSTklORyBpZGBcclxuICAgIGNvbnN0IGRlbGV0ZWRDb3VudCA9IHJlc3VsdC5sZW5ndGhcclxuICAgIGNvbnNvbGUubG9nKGBOZW9uOiBEZWxldGVkICR7ZGVsZXRlZENvdW50fSBvdXQgb2YgJHtldmFsdWF0aW9uSWRzLmxlbmd0aH0gZXZhbHVhdGlvbnNgKVxyXG4gICAgcmV0dXJuIGRlbGV0ZWRDb3VudCA+IDBcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihgTmVvbjogRXJyb3IgZGVsZXRpbmcgbXVsdGlwbGUgZXZhbHVhdGlvbnM6YCwgZXJyb3IpXHJcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZGV0YWlsczpcIiwge1xyXG4gICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxyXG4gICAgICBldmFsdWF0aW9uSWRzLFxyXG4gICAgICBjb25uZWN0aW9uRXJyb3IsXHJcbiAgICB9KVxyXG4gICAgcmV0dXJuIGZhbHNlXHJcbiAgfVxyXG59XHJcblxyXG4vKiBERUxFVEUgYWxsICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVBbGxBSFBFdmFsdWF0aW9ucygpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICBpZiAoIW5lb25SZWFkeSkge1xyXG4gICAgY29uc29sZS5sb2coYE5lb24gREIgbm90IHJlYWR5ICgke2Nvbm5lY3Rpb25FcnJvcn0pLCBkZWxldGluZyBhbGwgZnJvbSBpbi1tZW1vcnlgKVxyXG4gICAgY29uc3QgcHJldmlvdXNDb3VudCA9IG1lbS5sZW5ndGhcclxuICAgIG1lbS5sZW5ndGggPSAwXHJcbiAgICBjb25zb2xlLmxvZyhgRGVsZXRlZCBhbGwgJHtwcmV2aW91c0NvdW50fSBpdGVtcyBmcm9tIGluLW1lbW9yeWApXHJcbiAgICByZXR1cm4gdHJ1ZVxyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIGF3YWl0IGluaXRQcm9taXNlXHJcbiAgICBjb25zb2xlLmxvZyhcIkRlbGV0aW5nIGFsbCBldmFsdWF0aW9ucyBmcm9tIE5lb24uLi5cIilcclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHNxbCFgREVMRVRFIEZST00gYWhwX2V2YWx1YXRpb25zIFJFVFVSTklORyBpZGBcclxuICAgIGNvbnN0IGRlbGV0ZWRDb3VudCA9IHJlc3VsdC5sZW5ndGhcclxuICAgIGNvbnNvbGUubG9nKGBOZW9uOiBEZWxldGVkIGFsbCAke2RlbGV0ZWRDb3VudH0gZXZhbHVhdGlvbnNgKVxyXG4gICAgcmV0dXJuIHRydWVcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihcIk5lb246IEVycm9yIGRlbGV0aW5nIGFsbCBldmFsdWF0aW9uczpcIiwgZXJyb3IpXHJcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZGV0YWlsczpcIiwge1xyXG4gICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxyXG4gICAgICBjb25uZWN0aW9uRXJyb3IsXHJcbiAgICB9KVxyXG4gICAgcmV0dXJuIGZhbHNlXHJcbiAgfVxyXG59XHJcblxyXG4vKiBDYWxjdWxhdGUgYXZlcmFnZSB3ZWlnaHRzICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVBdmVyYWdlV2VpZ2h0cyhldmFsdWF0aW9uczogQUhQRXZhbHVhdGlvbltdKTogUmVjb3JkPHN0cmluZywgbnVtYmVyPiB7XHJcbiAgaWYgKGV2YWx1YXRpb25zLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHt9XHJcblxyXG4gIGNvbnN0IGFsbFdlaWdodHMgPSBldmFsdWF0aW9ucy5tYXAoKGV2YWx1YXRpb24pID0+IGV2YWx1YXRpb24uZ2xvYmFsX3dlaWdodHMpXHJcbiAgY29uc3QgY3JpdGVyaWFJZHMgPSBPYmplY3Qua2V5cyhhbGxXZWlnaHRzWzBdIHx8IHt9KVxyXG4gIGNvbnN0IGF2ZXJhZ2VXZWlnaHRzOiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+ID0ge31cclxuXHJcbiAgY3JpdGVyaWFJZHMuZm9yRWFjaCgoY3JpdGVyaWFJZCkgPT4ge1xyXG4gICAgY29uc3Qgd2VpZ2h0cyA9IGFsbFdlaWdodHMubWFwKCh3KSA9PiB3W2NyaXRlcmlhSWRdIHx8IDApXHJcbiAgICBhdmVyYWdlV2VpZ2h0c1tjcml0ZXJpYUlkXSA9IHdlaWdodHMucmVkdWNlKChzdW0sIHdlaWdodCkgPT4gc3VtICsgd2VpZ2h0LCAwKSAvIHdlaWdodHMubGVuZ3RoXHJcbiAgfSlcclxuXHJcbiAgcmV0dXJuIGF2ZXJhZ2VXZWlnaHRzXHJcbn1cclxuXHJcbi8qIFN0b3JhZ2Ugc3RhdHMgKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFN0b3JhZ2VTdGF0cygpIHtcclxuICBpZiAoIW5lb25SZWFkeSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgdG90YWxFdmFsdWF0aW9uczogbWVtLmxlbmd0aCxcclxuICAgICAgbGFzdFVwZGF0ZWQ6XHJcbiAgICAgICAgbWVtLmxlbmd0aCA+IDBcclxuICAgICAgICAgID8gbWVtLnNvcnQoKGEsIGIpID0+IG5ldyBEYXRlKGIudXBkYXRlZF9hdCkuZ2V0VGltZSgpIC0gbmV3IERhdGUoYS51cGRhdGVkX2F0KS5nZXRUaW1lKCkpWzBdLnVwZGF0ZWRfYXRcclxuICAgICAgICAgIDogbnVsbCxcclxuICAgICAgc3RvcmFnZTogXCJpbi1tZW1vcnlcIixcclxuICAgICAgY29ubmVjdGlvbkVycm9yLFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIGF3YWl0IGluaXRQcm9taXNlXHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBzcWwhYFxyXG4gICAgICBTRUxFQ1QgXHJcbiAgICAgICAgQ09VTlQoKikgYXMgdG90YWxfZXZhbHVhdGlvbnMsXHJcbiAgICAgICAgTUFYKHVwZGF0ZWRfYXQpIGFzIGxhc3RfdXBkYXRlZFxyXG4gICAgICBGUk9NIGFocF9ldmFsdWF0aW9uc1xyXG4gICAgYFxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHRvdGFsRXZhbHVhdGlvbnM6IE51bWJlcihyZXN1bHRbMF0udG90YWxfZXZhbHVhdGlvbnMpLFxyXG4gICAgICBsYXN0VXBkYXRlZDogcmVzdWx0WzBdLmxhc3RfdXBkYXRlZCxcclxuICAgICAgc3RvcmFnZTogXCJuZW9uXCIsXHJcbiAgICAgIGNvbm5lY3Rpb25FcnJvcjogbnVsbCxcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihcIsSwc3RhdGlzdGlrIGFsbWEgaGF0YXPEsTpcIiwgZXJyb3IpXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB0b3RhbEV2YWx1YXRpb25zOiAwLFxyXG4gICAgICBsYXN0VXBkYXRlZDogbnVsbCxcclxuICAgICAgc3RvcmFnZTogXCJlcnJvclwiLFxyXG4gICAgICBjb25uZWN0aW9uRXJyb3I6IGVycm9yLm1lc3NhZ2UsXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vKiBEYXRhYmFzZSBjb25uZWN0aW9uIGNoZWNrICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjaGVja0RhdGFiYXNlQ29ubmVjdGlvbigpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICBpZiAoIW5lb25SZWFkeSkge1xyXG4gICAgY29uc29sZS5sb2coYERhdGFiYXNlIGNvbm5lY3Rpb24gY2hlY2sgZmFpbGVkOiAke2Nvbm5lY3Rpb25FcnJvcn1gKVxyXG4gICAgcmV0dXJuIGZhbHNlXHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgYXdhaXQgaW5pdFByb21pc2VcclxuICAgIC8vIFRlc3QgdGhlIGNvbm5lY3Rpb24gd2l0aCBhIHNpbXBsZSBxdWVyeVxyXG4gICAgYXdhaXQgc3FsIWBTRUxFQ1QgMSBhcyB0ZXN0YFxyXG4gICAgY29uc29sZS5sb2coXCJEYXRhYmFzZSBjb25uZWN0aW9uIHRlc3Qgc3VjY2Vzc2Z1bFwiKVxyXG4gICAgcmV0dXJuIHRydWVcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihcIkRhdGFiYXNlIGNvbm5lY3Rpb24gdGVzdCBmYWlsZWQ6XCIsIGVycm9yKVxyXG4gICAgcmV0dXJuIGZhbHNlXHJcbiAgfVxyXG59XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuLyogIFV0aWxpdHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5mdW5jdGlvbiBwYXJzZVJvdyhyb3c6IGFueSk6IEFIUEV2YWx1YXRpb24ge1xyXG4gIGNvbnN0IHNhZmVKc29uUGFyc2UgPSAodmFsdWU6IGFueSwgZmFsbGJhY2s6IGFueSA9IHt9KSA9PiB7XHJcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmIHZhbHVlICE9PSBudWxsKSB7XHJcbiAgICAgIHJldHVybiB2YWx1ZSAvLyBBbHJlYWR5IHBhcnNlZFxyXG4gICAgfVxyXG5cclxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSh2YWx1ZSlcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiSlNPTiBwYXJzZSBlcnJvciBmb3IgdmFsdWU6XCIsIHZhbHVlLCBlcnJvcilcclxuICAgICAgICByZXR1cm4gZmFsbGJhY2tcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBmYWxsYmFja1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGlkOiByb3cuaWQsXHJcbiAgICB1c2VyX25hbWU6IHJvdy51c2VyX25hbWUsXHJcbiAgICBjcml0ZXJpYV93ZWlnaHRzOiBzYWZlSnNvblBhcnNlKHJvdy5jcml0ZXJpYV93ZWlnaHRzLCB7fSksXHJcbiAgICBnbG9iYWxfd2VpZ2h0czogc2FmZUpzb25QYXJzZShyb3cuZ2xvYmFsX3dlaWdodHMsIHt9KSxcclxuICAgIGNvbnNpc3RlbmN5X3Jlc3VsdHM6IHNhZmVKc29uUGFyc2Uocm93LmNvbnNpc3RlbmN5X3Jlc3VsdHMsIHt9KSxcclxuICAgIGhpZXJhcmNoeV9kYXRhOiBzYWZlSnNvblBhcnNlKHJvdy5oaWVyYXJjaHlfZGF0YSwge30pLFxyXG4gICAgY3JlYXRlZF9hdDogcm93LmNyZWF0ZWRfYXQsXHJcbiAgICB1cGRhdGVkX2F0OiByb3cudXBkYXRlZF9hdCxcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdlbmVyYXRlSWQoKTogc3RyaW5nIHtcclxuICByZXR1cm4gRGF0ZS5ub3coKS50b1N0cmluZygzNikgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKVxyXG59XHJcblxyXG4vLyBFeHBvcnQgY29ubmVjdGlvbiBzdGF0dXMgZm9yIGRlYnVnZ2luZ1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29ubmVjdGlvblN0YXR1cygpIHtcclxuICByZXR1cm4ge1xyXG4gICAgbmVvblJlYWR5LFxyXG4gICAgY29ubmVjdGlvbkVycm9yLFxyXG4gICAgaGFzRW52aXJvbm1lbnRVcmw6ICEhcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMLFxyXG4gICAgdXJsVmFsaWQ6IHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCA/IHZhbGlkYXRlRGF0YWJhc2VVcmwocHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMKSA6IGZhbHNlLFxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsibmVvbiIsInNxbCIsIm5lb25SZWFkeSIsImNvbm5lY3Rpb25FcnJvciIsInZhbGlkYXRlRGF0YWJhc2VVcmwiLCJ1cmwiLCJzdGFydHNXaXRoIiwidXJsT2JqIiwiVVJMIiwiaG9zdG5hbWUiLCJwYXRobmFtZSIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJjb25zb2xlIiwibG9nIiwiRXJyb3IiLCJ3YXJuIiwiZSIsImVycm9yIiwibWVzc2FnZSIsImNyZWF0ZVRhYmxlcyIsImluaXRQcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJtZW0iLCJtZW1GaW5kQnlVc2VyIiwidSIsImZpbmQiLCJ1c2VyX25hbWUiLCJtZW1TYXZlIiwicm93IiwiaSIsImZpbmRJbmRleCIsInB1c2giLCJpbml0aWFsaXplRGF0YWJhc2UiLCJzYXZlQUhQRXZhbHVhdGlvbiIsInVzZXJOYW1lIiwiY3JpdGVyaWFXZWlnaHRzIiwiZ2xvYmFsV2VpZ2h0cyIsImNvbnNpc3RlbmN5UmVzdWx0cyIsImhpZXJhcmNoeURhdGEiLCJub3ciLCJEYXRlIiwidG9JU09TdHJpbmciLCJpZCIsImdlbmVyYXRlSWQiLCJjcml0ZXJpYV93ZWlnaHRzIiwiZ2xvYmFsX3dlaWdodHMiLCJjb25zaXN0ZW5jeV9yZXN1bHRzIiwiaGllcmFyY2h5X2RhdGEiLCJjcmVhdGVkX2F0IiwidXBkYXRlZF9hdCIsImV4aXN0aW5nIiwibGVuZ3RoIiwicmVzIiwiSlNPTiIsInN0cmluZ2lmeSIsInBhcnNlUm93Iiwic3RhY2siLCJnZXRBbGxBSFBFdmFsdWF0aW9ucyIsIm1hcCIsImdldEFIUEV2YWx1YXRpb25CeVVzZXIiLCJkZWxldGVBSFBFdmFsdWF0aW9uIiwic3BsaWNlIiwicmVzdWx0IiwiZGVsZXRlZCIsImRlbGV0ZU11bHRpcGxlQUhQRXZhbHVhdGlvbnMiLCJldmFsdWF0aW9uSWRzIiwiZGVsZXRlZENvdW50IiwiZm9yRWFjaCIsInIiLCJkZWxldGVBbGxBSFBFdmFsdWF0aW9ucyIsInByZXZpb3VzQ291bnQiLCJjYWxjdWxhdGVBdmVyYWdlV2VpZ2h0cyIsImV2YWx1YXRpb25zIiwiYWxsV2VpZ2h0cyIsImV2YWx1YXRpb24iLCJjcml0ZXJpYUlkcyIsIk9iamVjdCIsImtleXMiLCJhdmVyYWdlV2VpZ2h0cyIsImNyaXRlcmlhSWQiLCJ3ZWlnaHRzIiwidyIsInJlZHVjZSIsInN1bSIsIndlaWdodCIsImdldFN0b3JhZ2VTdGF0cyIsInRvdGFsRXZhbHVhdGlvbnMiLCJsYXN0VXBkYXRlZCIsInNvcnQiLCJhIiwiYiIsImdldFRpbWUiLCJzdG9yYWdlIiwiTnVtYmVyIiwidG90YWxfZXZhbHVhdGlvbnMiLCJsYXN0X3VwZGF0ZWQiLCJjaGVja0RhdGFiYXNlQ29ubmVjdGlvbiIsInNhZmVKc29uUGFyc2UiLCJ2YWx1ZSIsImZhbGxiYWNrIiwicGFyc2UiLCJ0b1N0cmluZyIsIk1hdGgiLCJyYW5kb20iLCJzbGljZSIsImdldENvbm5lY3Rpb25TdGF0dXMiLCJoYXNFbnZpcm9ubWVudFVybCIsInVybFZhbGlkIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/neon-db.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fahp%2Froute&page=%2Fapi%2Fahp%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fahp%2Froute.ts&appDir=D%3A%5CSurucupuansistemi082025%5CSPS_DisiplinAyr-ml-_04092025%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CSurucupuansistemi082025%5CSPS_DisiplinAyr-ml-_04092025&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fahp%2Froute&page=%2Fapi%2Fahp%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fahp%2Froute.ts&appDir=D%3A%5CSurucupuansistemi082025%5CSPS_DisiplinAyr-ml-_04092025%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CSurucupuansistemi082025%5CSPS_DisiplinAyr-ml-_04092025&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_Surucupuansistemi082025_SPS_DisiplinAyr_ml_04092025_app_api_ahp_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/ahp/route.ts */ \"(rsc)/./app/api/ahp/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/ahp/route\",\n        pathname: \"/api/ahp\",\n        filename: \"route\",\n        bundlePath: \"app/api/ahp/route\"\n    },\n    resolvedPagePath: \"D:\\\\Surucupuansistemi082025\\\\SPS_DisiplinAyr-ml-_04092025\\\\app\\\\api\\\\ahp\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_Surucupuansistemi082025_SPS_DisiplinAyr_ml_04092025_app_api_ahp_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZhaHAlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFocCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFocCUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDU3VydWN1cHVhbnNpc3RlbWkwODIwMjUlNUNTUFNfRGlzaXBsaW5BeXItbWwtXzA0MDkyMDI1JTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1EJTNBJTVDU3VydWN1cHVhbnNpc3RlbWkwODIwMjUlNUNTUFNfRGlzaXBsaW5BeXItbWwtXzA0MDkyMDI1JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNxQjtBQUNrQztBQUMvRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUdBQW1CO0FBQzNDO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFzRDtBQUM5RDtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUMwRjs7QUFFMUYiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRDpcXFxcU3VydWN1cHVhbnNpc3RlbWkwODIwMjVcXFxcU1BTX0Rpc2lwbGluQXlyLW1sLV8wNDA5MjAyNVxcXFxhcHBcXFxcYXBpXFxcXGFocFxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYWhwL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWhwXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9haHAvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJEOlxcXFxTdXJ1Y3VwdWFuc2lzdGVtaTA4MjAyNVxcXFxTUFNfRGlzaXBsaW5BeXItbWwtXzA0MDkyMDI1XFxcXGFwcFxcXFxhcGlcXFxcYWhwXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fahp%2Froute&page=%2Fapi%2Fahp%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fahp%2Froute.ts&appDir=D%3A%5CSurucupuansistemi082025%5CSPS_DisiplinAyr-ml-_04092025%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CSurucupuansistemi082025%5CSPS_DisiplinAyr-ml-_04092025&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@neondatabase"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fahp%2Froute&page=%2Fapi%2Fahp%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fahp%2Froute.ts&appDir=D%3A%5CSurucupuansistemi082025%5CSPS_DisiplinAyr-ml-_04092025%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CSurucupuansistemi082025%5CSPS_DisiplinAyr-ml-_04092025&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();